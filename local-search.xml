<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Spring-Data-JPA</title>
    <link href="/2022/06/17/Spring-Data-JPA/"/>
    <url>/2022/06/17/Spring-Data-JPA/</url>
    
    <content type="html"><![CDATA[<h3 id="内容缩略"><a href="#内容缩略" class="headerlink" title="内容缩略"></a>内容缩略</h3><img src="/2022/06/17/Spring-Data-JPA/spring-data.svg" class=""><p><a href="spring-data.svg">spring data</a><br><a href="Spring%E5%A6%82%E4%BD%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E6%89%93%E4%BA%A4%E9%81%93.pdf">详细内容参考此PDF</a></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Spring Data</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>舍弃docker desktop切换colima踩坑日记</title>
    <link href="/2022/06/09/Colima/"/>
    <url>/2022/06/09/Colima/</url>
    
    <content type="html"><![CDATA[<ul><li><p>安装准备工作</p><p>彻底和docker desktop说再见，一定要卸载干净</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$</span> brew uninstall docker <span class="hljs-literal">--cask</span><br><span class="hljs-variable">$</span> <span class="hljs-built_in">cd</span> <br><span class="hljs-variable">$</span> <span class="hljs-built_in">rm</span> <span class="hljs-literal">-rf</span> .docker<br></code></pre></td></tr></table></figure></li><li><p>安装</p><p><code>$ brew install docker docker-compose kubernetes-cli colima</code></p><p>安装时可能出现的问题</p><ul><li><p>brew</p><p><code>$ Error: Permission denied @ apply2files - /usr/local/lib/docker/cli-plugins</code></p><p>解决方法：依次执行以下命令</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ mkdir -p <span class="hljs-regexp">/Applications/</span>Docker.app<span class="hljs-regexp">/Contents/</span>Resources/cli-plugins<br>$ brew cleanup<br></code></pre></td></tr></table></figure><p><code>$ Homebrew Error: No formulae found in taps</code></p><p>还有一些跟homebrew相关的问题，大多可以靠更新homebrew解决</p><p><code>$ brew update</code></p></li></ul></li><li><p>检查安装结果</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-variable">$ </span>docker <br><span class="hljs-variable">$ </span>docker-compose<br></code></pre></td></tr></table></figure><p>若出现有某个指令command not found，这是因为这两个命令之前由docker desktop管理，<br>现在变成了孤魂野鬼，需要由brew接收一下，可以运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">brew <span class="hljs-built_in">link</span> docker</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">brew <span class="hljs-built_in">link</span> docker-compose</span><br></code></pre></td></tr></table></figure></li><li><p>启动<br>colima未启动时，运行<code>docker ps</code>，应该有如下提示</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ Cannot connect to the Docker daemon at unix:<span class="hljs-regexp">//</span><span class="hljs-regexp">/Users/</span>qingqing.luo<span class="hljs-regexp">/.colima/</span>docker.sock. Is the docker daemon running?<br></code></pre></td></tr></table></figure><p>若发现提示中路径未包含colima，说明配置还未指向colima</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash"><span class="hljs-built_in">cd</span> /var/run</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">l docker.sock</span><br></code></pre></td></tr></table></figure><p>我们想要的结果是</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ lrwxr-xr-x  <span class="hljs-number">1</span> root  daemon    <span class="hljs-number">39</span>B  <span class="hljs-number">1</span> <span class="hljs-number">19</span> <span class="hljs-number">13</span>:<span class="hljs-number">39</span> docker.sock -&gt; <span class="hljs-regexp">/Users/</span>qingqing.luo<span class="hljs-regexp">/.colima/</span>docker.sock<br></code></pre></td></tr></table></figure><p>若不存在该文件或者未连接包含colima路径下的docker.sock则执行以下命令重新连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo <span class="hljs-built_in">rm</span> -rf docker.sock</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">sudo <span class="hljs-built_in">ln</span> -s  /Users/qingqing.luo/.colima/docker.sock docker.sock  <span class="hljs-comment">#换成你寄几的username就好</span></span><br></code></pre></td></tr></table></figure><p>这个问题是我们在使用testcontainers时发现的，元凶就是docker.sock软连接的位置错误，导致无法通信。<br>使用Idea service连接docker出现错误大概率也是这个问题。</p></li></ul><p>都没有问题就可以启动啦，colima start就相当于打开docker desktop应用，就是之前的小鲸鱼。<br><code>$ colima start</code></p><p>可以去喝杯茶，第一次启动需要下载组件</p><p>看到done之后可以检查docker daemon是否启动成功</p><p><code>$ docker ps</code></p><p>如果你看到了<br><code>$ CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</code><br>那么恭喜你，成功了。</p><ul><li><p>关闭<br><code>$ colima stop</code><br>等同于quit小鲸鱼</p></li><li><p>本地起postgres数据库的一个坑</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">db</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">postgres:9.6.23</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">5431:5432</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">POSTGRES_PASSWORD</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;&#x27;</span><br>      <span class="hljs-attribute">POSTGRES_USER</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;&#x27;</span><br>      <span class="hljs-attribute">POSTGRES_DB</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;&#x27;</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./database_data:/var/lib/postgresql/data</span><br><br></code></pre></td></tr></table></figure><p>我们项目使用docker-compose启动本地数据库，在image内设置了volumes将image中存放数据的文件夹与本地文件夹.&#x2F;database_data相连接来实现数据持久化。<br>使用docker desktop时没有出现任何问题。<br>切换colima后遇到permission denied异常，无法使用此配置挂载。</p></li></ul><p>后来找到的解决方案是重新配置</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">version</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;3&#x27;</span><br><span class="hljs-attribute">services</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">db</span><span class="hljs-punctuation">:</span><br>    <span class="hljs-attribute">image</span><span class="hljs-punctuation">:</span> <span class="hljs-string">postgres:9.6.23</span><br>    <span class="hljs-attribute">ports</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">5431:5432</span><br>    <span class="hljs-attribute">environment</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">POSTGRES_PASSWORD</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;performance&#x27;</span><br>      <span class="hljs-attribute">POSTGRES_USER</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;performance&#x27;</span><br>      <span class="hljs-attribute">POSTGRES_DB</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;performance&#x27;</span><br>    <span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">database_data:/var/lib/postgresql/data</span><br>    <br><span class="hljs-attribute">volumes</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">database_data</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br></code></pre></td></tr></table></figure><p>我们删除了本地存放数据的文件夹，并在最外层配置了volumes：database_data来替代本地文件夹，这个volume会在执行docker-compose脚本时和image一起被创建出来，<br>只要不使用docker-compose down -v删除该volume就可以实现数据持久化。<br>然后在image的配置中将该volume：database_data和db这个image中存放数据的文件路径&#x2F;var&#x2F;lib&#x2F;postgresql&#x2F;data相关联即可。</p>]]></content>
    
    
    <categories>
      
      <category>Devops</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HUST.luoqingqing</title>
    <link href="/2022/06/09/hello-world/"/>
    <url>/2022/06/09/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
